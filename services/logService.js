const db = require("./db");

/**
 * –õ–æ–≥–∏—Ä—É–µ—Ç –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü—É `user_logs`
 * @param {number} user_id - Telegram ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * @param {string} action - –¢–∏–ø –¥–µ–π—Å—Ç–≤–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, 'start', 'verify', 'sync', 'error')
 * @param {string|null} details - –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–º–æ–∂–µ—Ç –±—ã—Ç—å JSON.stringify(...))
 */
async function logUserAction(user_id, action, details = null) {
  try {
    await db("user_logs").insert({
      user_id,
      action,
      details,
      created_at: new Date().toISOString(),
    });
    console.log(`üìò [–õ–û–ì] ${user_id}: ${action}`);
  } catch (err) {
    console.error(
      `‚ùå –û—à–∏–±–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user_id}:`,
      err.message
    );
  }
}
async function logAdminAction(admin_id, action, details) {
  return await db("admin_logs").insert({
    admin_id,
    action,
    details: typeof details === "string" ? details : JSON.stringify(details),
    timestamp: new Date().toISOString(),
  });
}

module.exports = {
  logUserAction,
  logAdminAction,
};
