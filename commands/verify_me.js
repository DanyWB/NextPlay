const db = require("../services/db");
const {isVerified, getUser} = require("../services/userService");

module.exports = (bot) => {
  bot.command("verify_me", async (ctx) => {
    const userId = ctx.from.id;
    const user = await getUser(userId);

    if (!user)
      return ctx.reply("‚ö†Ô∏è –í—ã –µ—â—ë –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start.");

    const verified = await isVerified(userId);
    if (verified) return ctx.reply("‚úÖ –í—ã —É–∂–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã.");

    // ‚õî –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å ‚Äî 2 —á–∞—Å–∞
    if (user.last_verification_request) {
      const lastRequest = new Date(user.last_verification_request);
      const now = new Date();
      const diffMs = now - lastRequest;
      const diffHours = diffMs / (1000 * 60 * 60);

      if (diffHours < 2) {
        const minutesLeft = Math.ceil((2 - diffHours) * 60);
        return ctx.reply(
          `‚è≥ –í—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∏ –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é.\n–ü–æ–≤—Ç–æ—Ä–Ω–æ –º–æ–∂–Ω–æ —á–µ—Ä–µ–∑ ${minutesLeft} –º–∏–Ω.\n\n‚öñÔ∏è –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –≤–µ—Å, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /set_weight`
        );
      }
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    await db("users")
      .where({id: userId})
      .update({last_verification_request: new Date().toISOString()});

    await ctx.reply(
      "üïì –ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞."
    );

    const adminId = parseInt(process.env.ADMIN_ID);
    const clubs = await db("club").select("id", "name");

    const buttons = clubs.map((club) => [
      {
        text: club.name,
        callback_data: `verify_select_club_${userId}_${club.id}`,
      },
    ]);
    buttons.push([
      {text: "‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", callback_data: `verify_decline_${userId}`},
    ]);

    function escapeMarkdownV2(text) {
      return text.replace(/[_*[\]()~`>#+=|{}.!\\]/g, "\\$&"); // —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º –≤—Å–µ –≤–∞–∂–Ω—ã–µ —Å–∏–º–≤–æ–ª—ã
    }

    await bot.api.sendMessage(
      adminId,
      `üì• *–ó–∞–ø—Ä–æ—Å –Ω–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—é*\nüë§ Telegram ID: \`${userId}\`\nüîπ Username: @${escapeMarkdownV2(
        user.username || `user_${userId}`
      )}\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–ª—É–±, –∫ –∫–æ—Ç–æ—Ä–æ–º—É –æ—Ç–Ω–æ—Å–∏—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:`,
      {
        parse_mode: "Markdown",
        reply_markup: {inline_keyboard: buttons},
      }
    );
  });
};
